package com.onextent.augmatic;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import com.actionbarsherlock.app.SherlockListFragment;
import com.onextent.augie.AugieException;
import com.onextent.augie.AugieStoreException;
import com.onextent.augie.Augiement;
import com.onextent.augie.AugiementName;
import com.onextent.augie.Mode;
import com.onextent.augie.ModeManager;
import com.onextent.augie.camera.AugCamera;
import com.onextent.augie.camera.CameraName;
import com.onextent.augmatic.BaseAugmaticActivity;
import com.onextent.augmatic.R;
import com.onextent.util.codeable.Code;
import com.onextent.util.codeable.Codeable;
import com.onextent.util.codeable.CodeableException;
import com.onextent.util.codeable.CodeableName;

import android.os.Bundle;
import android.support.v4.app.FragmentTransaction;
import android.util.Log;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.ListView;

public class ModeSelectionFrag extends SherlockListFragment {
    

    List<Code> modeCode = new ArrayList<Code>();
    
    @Override
    public void onActivityCreated(Bundle savedInstanceState) {
        super.onActivityCreated(savedInstanceState);
        
        try {
        List<String> names = new ArrayList<String>();
        final ModeManager modeManager = ((BaseAugmaticActivity) getActivity()).getModeManager();
        modeCode = modeManager.getAllModeCode();
        String currentModeUIName = modeManager.getCurrentMode().getName();
        int currentCameraIdPos = -1;
        for (Code c : modeCode) {
                names.add(c.getString("name"));
        }
        currentCameraIdPos = names.indexOf(currentModeUIName); 

        String[] items = new String[names.size()];
        names.toArray(items);

        setListAdapter(new ArrayAdapter<String>(getActivity(),
                android.R.layout.simple_list_item_activated_1, items));
        getListView().setChoiceMode(ListView.CHOICE_MODE_SINGLE);
        getListView().setItemChecked(currentCameraIdPos, true);
        
        updateUI();
        } catch (CodeableException e) {
            Log.e(Augiement.TAG, e.toString(), e);
        } catch (AugieStoreException e) {
            Log.e(Augiement.TAG, e.toString(), e);
        }
    }
    
    private void updateUI() {
       
        /*
        FragmentTransaction txn = getActivity().getSupportFragmentManager().beginTransaction();
        AugiementListFrag settingsList = new AugiementListFrag();
        txn.replace(R.id.module_list, settingsList);
        txn.commit();
         */
    }

    @Override
    public void onListItemClick(ListView l, View v, int position, long id) {
        
        Code code = modeCode.get(position);
        
        CodeableName modeName;
        try {
            modeName = code.getCodeableName(Codeable.CODEABLE_NAME_KEY);
            setMode(modeName);
        } catch (CodeableException e) {
            Log.e(Augiement.TAG, e.toString(), e);
        }
        
        updateUI();
    }

    private void setMode(CodeableName cn) {
        
        ModeManager modeManager = ((BaseAugmaticActivity) getActivity()).getModeManager();
        Mode m = modeManager.getCurrentMode();
        try {
            AugCamera c = modeManager.getCameraFactory().getCamera(cn);
            m.deactivate();
            m.setCamera(c);
            m.activate();
        } catch (AugieException e) {
            Log.e(AugCamera.TAG, e.toString(), e);
        }
    }
}
