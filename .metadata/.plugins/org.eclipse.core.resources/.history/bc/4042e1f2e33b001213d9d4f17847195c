/**
 * copyright Ed Sweeney, 2012, all rights reserved
 */

package com.onextent.augmatic;

import java.util.AbstractList;
import java.util.List;
import com.actionbarsherlock.app.ActionBar;
import com.actionbarsherlock.app.ActionBar.OnNavigationListener;
import com.actionbarsherlock.app.SherlockFragmentActivity;
import com.actionbarsherlock.view.Menu;
import com.actionbarsherlock.view.MenuInflater;
import com.actionbarsherlock.view.MenuItem;
import com.onextent.augie.AugieStoreException;
import com.onextent.augie.AugieScape;
import com.onextent.augie.AugieView;
import com.onextent.augie.Augiement;
import com.onextent.augie.AugiementException;
import com.onextent.augie.AugiementFactory;
import com.onextent.augie.RealityScape;
import com.onextent.augie.Mode;
import com.onextent.augie.ModeManager;
import com.onextent.augie.SuperScape;
import com.onextent.augie.camera.AugCamera;
import com.onextent.augie.camera.AugCameraFactory;
import com.onextent.augie.camera.TouchShutter;
import com.onextent.augie.camera.impl.AugCameraFactoryImpl;
//ejs todo: get rid of these impl refs into augie
import com.onextent.augie.impl.AugDrawFeature;
import com.onextent.augie.impl.AugieScapeImpl;
import com.onextent.augie.impl.FrameLevelerFeature;
import com.onextent.augie.impl.HorizonCheckFeature;
import com.onextent.augie.impl.HorizonFeature;
import com.onextent.augie.impl.ModeManagerImpl;
import com.onextent.augie.impl.ShakeResetFeature;
import android.content.Context;
import android.content.Intent;
import android.graphics.PixelFormat;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.ArrayAdapter;
import android.widget.BaseAdapter;
import android.widget.Button;
import android.widget.RelativeLayout;
import android.os.Bundle;

/**
 * Augmatic is the reference implementation camara for Augie
 * 
 * T H E   A U G I E   A U G M A T I C   1 0 0 0 
 * T H E   A U G I E   A U G M A T I C   1 0 0 0 
 * T H E   A U G I E   A U G M A T I C   1 0 0 0 
 * 
 */
public class AugmaticActivity extends SherlockFragmentActivity {

    private AugCameraFactory cameraFactory;
    private AugiementFactory augiementFactory;
    private ModeManager modeManager;
    private AugieScape augmentedView;

    static final String TAG = Augiement.TAG;
    private Button menu_btn;
    
    public AugmaticActivity() {
        
    }

    @Override
    public void onCreate(Bundle savedInstanceState) {

        super.onCreate(savedInstanceState);
    
        try {
            cameraFactory = new AugCameraFactoryImpl();
            augmentedView = new AugieScapeImpl(this);
            augiementFactory = new AugmaticAugiementFactory(augmentedView);
            modeManager = new ModeManagerImpl(this, 
                                              augmentedView, 
                                              cameraFactory, 
                                              augiementFactory);
        } catch (Exception e) {
            throw new java.lang.IllegalStateException(e);
        }
        try {
            modeManager.onCreate(this);
        } catch (AugieStoreException e1) {
            Log.e(TAG, e1.toString(), e1);
            return;
        }
       
        menu_btn = new Button(this);
        configMenuButton();
        
        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, 
                             WindowManager.LayoutParams.FLAG_FULLSCREEN);
        getWindow().setFormat(PixelFormat.TRANSLUCENT);
        getWindow().requestFeature(Window.FEATURE_ACTION_BAR_OVERLAY);
        getWindow().requestFeature(Window.FEATURE_ACTION_MODE_OVERLAY);

        setContentView(R.layout.main);

        try {
            cameraFactory.onCreate(augmentedView, null);
           
            augmentedView.addFeature(cameraFactory.getCamera(null));

            AugDrawFeature drawer = new AugDrawFeature();
            augmentedView.addFeature(drawer);

            augmentedView.addFeature(new HorizonFeature());
            
            augmentedView.addFeature(new HorizonCheckFeature());

            augmentedView.addFeature(new FrameLevelerFeature());

            augmentedView.addFeature(new TouchShutter());

            ShakeResetFeature shakeReseter = new ShakeResetFeature();
            augmentedView.addFeature(shakeReseter);
            
            shakeReseter.registerTwoShakeReset(drawer);

            RelativeLayout layout = (RelativeLayout) findViewById(R.id.camera_preview);
            
            //configCamPreview( cameraFactory.getCamera(null) );
            //modeManager.getCurrentMode().activate();
            SuperScape superScape = new SuperScape(this, augmentedView,menu_btn, layout);
            
            layout.setOnTouchListener(augmentedView);

            getSupportActionBar().setBackgroundDrawable(null);
            getSupportActionBar().hide();
            
            //todo: activate current mode

        } catch (AugiementException e) {
            Log.e(TAG, "can not create augmatic", e);
        } catch (Throwable err) {
            Log.e(TAG, "can not create augmatic", err);
        }
    }
    
    @Override
    protected void onPause() {
        Log.d(TAG, getClass().getName() + " onPause");
        super.onPause();
        augmentedView.stop();
        cameraFactory.stop();
    }

    @Override
    protected void onResume() {
        Log.d(TAG, getClass().getName() + " onResume");
        super.onResume();
        augmentedView.resume();
        cameraFactory.resume();
    }

    @Override
    protected void onStop() {
        Log.d(TAG, getClass().getName() + " onStop");
        modeManager.stop();
        cameraFactory.stop();
        super.onStop();
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {

        switch (item.getItemId()) {
        case R.id.menu_camera:
            return true;
        case R.id.menu_settings:
            return true;
        case R.id.menu_overlays:
            AugielayDialog ald = new AugielayDialog();
            ald.show(getSupportFragmentManager(), "Augielay Fragment");
            return true;
        case R.id.menu_hide:
            getSupportActionBar().hide();
            menu_btn.setVisibility(View.VISIBLE);
            return true;
        case R.id.mode_add:
            NewModeDialog nmd = new NewModeDialog();
            nmd.show(getSupportFragmentManager(), "New Mode Fragment");
            return true;
        case R.id.mode_del:
            DeleteModeDialog dmd = new DeleteModeDialog();
            dmd.show(getSupportFragmentManager(), "Delete Mode Fragment");
            return true;
        case R.id.prefs:
            startActivity(new Intent(this, AugmaticPreferences.class));
            return true;
        default:
            Log.d(TAG, "menu default for id " + item.getItemId());
            return super.onOptionsItemSelected(item);
        }
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        MenuInflater inflater = getSupportMenuInflater();
        inflater.inflate(R.menu.options, menu);

        ActionBar actionBar = getSupportActionBar();
        actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_LIST);

        final BaseAdapter adapter = new ModeAdapter(this, new ModeNameList());

        OnNavigationListener navl = new OnNavigationListener() {

            @Override
            public boolean onNavigationItemSelected(int itemPosition, long itemId) {
                try {
                    Mode newMode = modeManager.getModes().get(itemPosition);
                    setCurrentMode(newMode);
                } catch (AugieStoreException e) {
                    Log.e(TAG, e.toString(), e);
                }
                return true;
            }
        };

        actionBar.setListNavigationCallbacks(adapter, navl);
        actionBar.setSelectedNavigationItem(modeManager.getCurrentModeIdx());

        return true;
    }
    
    public void setCurrentMode(Mode mode) {
        /*
        augmentedView = new AugieViewImpl(this);
        try {
            modeManager.getCurrentMode().getCamera().stopPreview();
            modeManager.getCurrentMode().getCamera().close();
        } catch (AugCameraException e) {
            Log.e(TAG, e.toString(), e);
        }
         */
        augmentedView.stop();
        modeManager.setCurrentMode(mode);
        ActionBar actionBar = getSupportActionBar();
        actionBar.setSelectedNavigationItem(modeManager.getCurrentModeIdx());
        /*
        try {
            mode.getCamera().open();
        } catch (AugCameraException e) {
            Log.e(TAG, e.toString(), e);
        }
        configCamPreview( mode.getCamera() ); 
         */
    }
    
    private class ModeNameList extends AbstractList<String> {

        @Override
        public String get(int location) {
            try {
                List<Mode> modes = modeManager.getModes();
                Mode m = modes.get(location);
                if (m != null) {
                    return m.getName();
                }
            } catch (AugieStoreException e) {
                Log.e(TAG, e.toString(), e);
            }
            return null;
        }

        @Override
        public int size() {
            try {
                return modeManager.getModes().size();
            } catch (AugieStoreException e) {
                Log.e(TAG, e.toString(), e);
            }
            return 0;
        }
    }
    
    private class ModeAdapter extends ArrayAdapter<String> {

        public ModeAdapter(Context context, List<String> list) {
            super(context, android.R.layout.simple_spinner_item, list);
        }
    }

    public ModeManager getModeManager() {
        
        return modeManager;
    }
    
    private void configMenuButton() {

        RelativeLayout.LayoutParams params = new RelativeLayout.LayoutParams(RelativeLayout.LayoutParams.WRAP_CONTENT, RelativeLayout.LayoutParams.WRAP_CONTENT);
    
        params.addRule(RelativeLayout.ALIGN_PARENT_RIGHT, RelativeLayout.TRUE);
    
        menu_btn.setLayoutParams(params);
    
        menu_btn.setMinimumHeight(30);
    
        menu_btn.setMinimumWidth(30);
   
        menu_btn.setBackgroundResource(R.drawable.abs__ic_menu_moreoverflow_holo_dark);
    
        menu_btn.setOnClickListener(new View.OnClickListener() {
    
            public void onClick(View view) {
    
                getSupportActionBar().show();
    
                menu_btn.setVisibility(View.GONE);
            }
        });
    }
}
