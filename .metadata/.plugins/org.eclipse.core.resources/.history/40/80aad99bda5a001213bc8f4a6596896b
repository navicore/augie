package com.onextent.augmatic;

import java.util.ArrayList;
import java.util.List;

import com.actionbarsherlock.app.SherlockDialogFragment;
import com.actionbarsherlock.app.SherlockFragmentActivity;
import com.onextent.augie.AugieException;
import com.onextent.augie.Augiement;
import com.onextent.augie.AugiementFactory;
import com.onextent.augie.Mode;
import com.onextent.augie.ModeManager;
import com.onextent.augmatic.R;
import com.onextent.util.codeable.CodeableName;

import android.app.Dialog;
import android.os.Bundle;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentTransaction;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.CheckBox;
import android.widget.CompoundButton;
import android.widget.CompoundButton.OnCheckedChangeListener;
import android.widget.ListView;

public class AugiementListFrag extends AugiementListBase {
    
    int mCurCheckPosition = 0;
    
    @Override
    public void onActivityCreated(Bundle savedInstanceState) {
        super.onActivityCreated(savedInstanceState);

        ModeManager modeManager = ((BaseAugmaticActivity) getActivity()).getModeManager();
        Mode mode = modeManager.getCurrentMode();
        modeAugiements = mode.getAugiements();
        allAugiements = modeManager.getAugiementFactory().getAllMeta();

        List<String> itemList = new ArrayList<String>();
        cnList = new ArrayList<CodeableName>();
        for (AugiementFactory.Meta m : allAugiements.values()) {
            itemList.add(m.getUIName());
            cnList.add(m.getCodeableName());
        }

        String[] items = new String[itemList.size()];
        itemList.toArray(items);

        setListAdapter(new ArrayAdapter<String>(getActivity(),
                android.R.layout.simple_list_item_activated_1, items));

        // Check to see if we have a frame in which to embed the details
        // fragment directly in the containing UI.
        View detailsFrame = getActivity().findViewById(R.id.module_details);
        isDualPane = detailsFrame != null;

        if (savedInstanceState != null) {
            // Restore last state for checked position.
            mCurCheckPosition = savedInstanceState.getInt("curChoice", 0);
        }

        if (isDualPane) {
            getListView().setChoiceMode(ListView.CHOICE_MODE_SINGLE);
            showDetails(mCurCheckPosition);
        }
    }

    @Override
    public void onSaveInstanceState(Bundle outState) {
        super.onSaveInstanceState(outState);
        outState.putInt("curChoice", mCurCheckPosition);
    }

    @Override
    public void onListItemClick(ListView l, View v, final int position, long id) {
       
        SherlockDialogFragment f = new SherlockDialogFragment() {

            @Override
            public View onCreateView(LayoutInflater inflater,
                    ViewGroup container, Bundle savedInstanceState) {

                Dialog d = getDialog();
                if (d != null) d.setTitle("Enable Augiement");
                View v = inflater.inflate(R.layout.module_status, container, false);
                CheckBox cbox = (CheckBox) v.findViewById(R.id.module_enabled);

                final CodeableName cn = cnList.get(position);
                
                cbox.setChecked(modeAugiements.containsKey(cn));
                
                cbox.setOnCheckedChangeListener(new OnCheckedChangeListener() {
                    
                    @Override
                    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {

                        ModeManager modeManager = ((BaseAugmaticActivity) getActivity()).getModeManager();
                        AugiementFactory af = modeManager.getAugiementFactory();
                        Mode mode = modeManager.getCurrentMode();
                        if (isChecked) {
                            Augiement a = af.newInstance(cn);
                            mode.addAugiement(a);
                        } else {
                            Augiement a = modeAugiements.get(cn);
                            mode.removeAugiement(a);
                        }
                        try {
                            modeManager.setCurrentMode(mode);
                        } catch (AugieException e) {
                            Log.e(TAG, e.toString(), e);
                        } //reset everything with new a
                    }
                });

                return v;
            }
        };
        
        FragmentManager fm = ((SherlockFragmentActivity)getActivity()).getSupportFragmentManager();
        if (f != null) {
                if (isDualPane) {
                    FragmentTransaction ft = getActivity().getSupportFragmentManager().beginTransaction();
                    ft.replace(R.id.module_status, f);
                    ft.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE);
                    ft.commit();

                } else {
                    f.show(fm, "Module Status");
                    f.show((getActivity()).getSupportFragmentManager(), "Module Status");
                }
            }

        showDetails(position);
    }
}
